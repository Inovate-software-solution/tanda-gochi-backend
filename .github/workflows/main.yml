name: CICD workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  pull_request_review:
    types:
      - submitted
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        
      - name: |
          ls
          cd ..
          ls
          cd /home/runner/work/tanda-gochi-backend/tanda-gochi-backend/tests/assets/test_dummy.png
          ls
        
      - name: Set up Node.js (latest LTS version)
        uses: actions/setup-node@v2
        with:
          node-version: "18.17.1"

      - name: Import .env from secrets
        run: |
          echo "${{ secrets.DOTENV }}" > .env

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js (latest LTS version)
        uses: actions/setup-node@v2
        with:
          node-version: "18.17.1"

      - name: Import .env from secrets
        run: |
          echo "${{ secrets.DOTENV }}" > .env

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.DEPLOYKEY }}" > ~/.ssh/DeployKey
          chmod 600 ~/.ssh/DeployKey
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/DeployKey
      - name: Add Server to Known Hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: SSH and Deploy
        run: |
          ssh -i ~/.ssh/DeployKey capstone@${{ secrets.SERVER_IP }} << 'ENDSSH'
          bash /home/capstone/CapstoneProjects/DeployScriptAPI.sh
          ENDSSH
